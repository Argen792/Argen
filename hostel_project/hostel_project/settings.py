"""
Django settings for hostel_project project.

Generated by 'django-admin startproject' using Django 4.2.13.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2-34(7#g8isel6bxkmo+ki$a9)lp+hf4vg1t_ogxyo!n0v#yz='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'hostel_app',               # Ваше приложение
    'rest_framework',           # Django REST framework
    'rest_framework.authtoken', # Для токен-аутентификации
    'corsheaders',              # Для CORS
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware', # ПРАВИЛЬНО, стоит высоко в списке
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Эта настройка для CORS_ALLOWED_ORIGINS идеальна для разработки.
# Для продакшена замените ее на конкретные домены вашего фронтенда.
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",  # Если ваш React/Vue/Angular dev server здесь
    "http://127.0.0.1:3000",
    "http://localhost:5173",  # Пример для Vite (Vue, React, Svelte)
    "http://127.0.0.1:5173",
    # Добавьте сюда порт вашего Flutter Web dev server, если будете его использовать
    # (например, "http://localhost:ПОРТ_FLUTTER_WEB")
]
# Альтернативно, для разработки можно использовать (менее безопасно для продакшена):
# CORS_ALLOW_ALL_ORIGINS = True

ROOT_URLCONF = 'hostel_project.urls'

# ... (TEMPLATES, DATABASES, AUTH_PASSWORD_VALIDATORS, и т.д. - они выглядят стандартно и правильно) ...

# --- ДОБАВЬТЕ ЭТУ СЕКЦИЮ ДЛЯ НАСТРОЕК DJANGO REST FRAMEWORK ---
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        # 'rest_framework.authentication.SessionAuthentication', # Оставьте, если хотите использовать Browsable API с логином Django
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        # По умолчанию сделаем API доступным только для аутентифицированных пользователей.
        # Если какие-то эндпоинты должны быть публичными, вы можете переопределить
        # permission_classes на уровне конкретного ViewSet или APIView.
        'rest_framework.permissions.IsAuthenticated',
        # 'rest_framework.permissions.AllowAny', # Использовать с осторожностью
    ]
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hostel_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
